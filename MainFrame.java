
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.List;
import javax.swing.BoxLayout;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 * @author Darpan
 */
public class MainFrame extends javax.swing.JFrame {
    private DefaultListModel<Item> odrModelDefault;
    

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        
        initComponents();
        
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        catCapture = new javax.swing.JDialog();
        catCapLabel = new javax.swing.JLabel();
        catCapTextField = new javax.swing.JTextField();
        catCapBtn = new javax.swing.JButton();
        catCancelButton = new javax.swing.JButton();
        optionsDialog = new javax.swing.JDialog();
        goFullScreenButton = new javax.swing.JButton();
        exitFullScreenButton = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        paymentDialog = new javax.swing.JDialog();
        paymentDialogLabel = new javax.swing.JLabel();
        cashButton = new javax.swing.JButton();
        cardButton = new javax.swing.JButton();
        tableSetupDialog = new javax.swing.JDialog();
        tableSetupLabel = new javax.swing.JLabel();
        tableSetupTextField = new javax.swing.JTextField();
        tableSetupButton = new javax.swing.JButton();
        activeOrderDialog = new javax.swing.JDialog();
        activeOrderCloseButton = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        activeOrderList = new javax.swing.JList();
        orderHistoryDialog = new javax.swing.JDialog();
        jScrollPane5 = new javax.swing.JScrollPane();
        orderHistoryList = new javax.swing.JList();
        orderNoTextLabel = new javax.swing.JLabel();
        orderHistorySearchButton = new javax.swing.JButton();
        orderHistoryTextField = new javax.swing.JTextField();
        setTableNoDialog = new javax.swing.JDialog();
        newOrderSummaryLabel = new javax.swing.JLabel();
        setTableNumberLabel = new javax.swing.JLabel();
        newOrderTableNoTextField = new javax.swing.JTextField();
        newOrderDoneButton = new javax.swing.JButton();
        takeAwayButton = new javax.swing.JButton();
        catBtnGroup = new javax.swing.ButtonGroup();
        addItemDialog = new javax.swing.JDialog();
        addItmLabel = new javax.swing.JLabel();
        itmNameLabel = new javax.swing.JLabel();
        itmNameTextField = new javax.swing.JTextField();
        itmInfoLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        itmInfoTextArea = new javax.swing.JTextArea();
        itmPriceLabel = new javax.swing.JLabel();
        itmPriceTextField = new javax.swing.JTextField();
        addItmCancelBtn = new javax.swing.JButton();
        addItmDoneBtn = new javax.swing.JButton();
        selectCatComboBox = new javax.swing.JComboBox();
        editCategoryDialog = new javax.swing.JDialog();
        editCatLabel = new javax.swing.JLabel();
        editCatLabel2 = new javax.swing.JLabel();
        newCatNameTextField = new javax.swing.JTextField();
        editCatDoneButton = new javax.swing.JButton();
        editCatCancelButton = new javax.swing.JButton();
        editCatComboBox = new javax.swing.JComboBox();
        removeCategoryDialog = new javax.swing.JDialog();
        removeCatLabel = new javax.swing.JLabel();
        removeCatComboBox = new javax.swing.JComboBox();
        removeCatCheckBox = new javax.swing.JCheckBox();
        removeCatDoneButton = new javax.swing.JButton();
        removeCatCancelButton = new javax.swing.JButton();
        editItemDialog = new javax.swing.JDialog();
        editItemLabel1 = new javax.swing.JLabel();
        editItemCatComboBox = new javax.swing.JComboBox();
        editItemLabel2 = new javax.swing.JLabel();
        editItemItemsComboBox = new javax.swing.JComboBox();
        editItemCheckBox = new javax.swing.JCheckBox();
        editItemDoneButton = new javax.swing.JButton();
        editItemCancelButton3 = new javax.swing.JButton();
        newItmNameTextField = new javax.swing.JTextField();
        newItmNameLabel = new javax.swing.JLabel();
        newItmInfoLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        newItmInfoTextArea = new javax.swing.JTextArea();
        newItmPriceLabel = new javax.swing.JLabel();
        newItmPriceTextField = new javax.swing.JTextField();
        removeItemDialog = new javax.swing.JDialog();
        removeItemLabel1 = new javax.swing.JLabel();
        removeItemCatComboBox = new javax.swing.JComboBox();
        removeItemLabel2 = new javax.swing.JLabel();
        removeItemItmComboBox = new javax.swing.JComboBox();
        removeItemCheckBox = new javax.swing.JCheckBox();
        removeItemDoneButton = new javax.swing.JButton();
        removeItemCancelButton = new javax.swing.JButton();
        categoryPanel = new javax.swing.JPanel();
        displayPanel = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        menuDisplayList = new javax.swing.JList();
        jScrollPane1 = new javax.swing.JScrollPane();
        orderDisplayList = new javax.swing.JList();
        totalDisplayTextField = new javax.swing.JTextField();
        totalLabel = new javax.swing.JLabel();
        orderNumberLabel = new javax.swing.JLabel();
        tableNumberLabel = new javax.swing.JLabel();
        orderNoDisplayTextField = new javax.swing.JTextField();
        tableNoDisplayTextField = new javax.swing.JTextField();
        buttonsPanel = new javax.swing.JPanel();
        newOrderButton = new javax.swing.JButton();
        activeOrdersButton = new javax.swing.JButton();
        sendToKitchenButton = new javax.swing.JButton();
        orderHistoryButton = new javax.swing.JButton();
        completeOrderButton = new javax.swing.JButton();
        optionsButton = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        saveMenuItem = new javax.swing.JMenuItem();
        fullScreenMenuItem = new javax.swing.JMenuItem();
        settingsMenu = new javax.swing.JMenu();
        categoryMenu = new javax.swing.JMenu();
        addCategoryMenuItem = new javax.swing.JMenuItem();
        editCategoryMenuItem = new javax.swing.JMenuItem();
        removeCategoryMenuItem = new javax.swing.JMenuItem();
        itemMenu = new javax.swing.JMenu();
        addItemMenuItem = new javax.swing.JMenuItem();
        editItemMenuItem = new javax.swing.JMenuItem();
        removeItemMenuItem = new javax.swing.JMenuItem();
        tablesMenu = new javax.swing.JMenu();
        noOfTablesMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        userGuideMenuItem = new javax.swing.JMenuItem();

        catCapture.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        catCapture.setTitle("Category Capture Dialog");
        catCapture.setLocation(new java.awt.Point(450, 300));
        catCapture.setModal(true);
        catCapture.setResizable(false);
        catCapture.setSize(400, 150);

        catCapLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        catCapLabel.setText("Please enter the category name: ");

        catCapTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        catCapBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        catCapBtn.setText("Done");
        catCapBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                catCapBtnActionPerformed(evt);
            }
        });

        catCancelButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        catCancelButton.setText("Cancel");
        catCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                catCancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout catCaptureLayout = new javax.swing.GroupLayout(catCapture.getContentPane());
        catCapture.getContentPane().setLayout(catCaptureLayout);
        catCaptureLayout.setHorizontalGroup(
            catCaptureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(catCaptureLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(catCaptureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(catCaptureLayout.createSequentialGroup()
                        .addComponent(catCapLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(catCapTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, catCaptureLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(catCapBtn)
                        .addGap(18, 18, 18)
                        .addComponent(catCancelButton)))
                .addGap(15, 15, 15))
        );
        catCaptureLayout.setVerticalGroup(
            catCaptureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, catCaptureLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(catCaptureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(catCapLabel)
                    .addComponent(catCapTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(catCaptureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(catCapBtn)
                    .addComponent(catCancelButton))
                .addGap(15, 15, 15))
        );

        optionsDialog.setTitle("Options");
        optionsDialog.setLocation(550,250);
        optionsDialog.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        optionsDialog.setResizable(false);
        optionsDialog.setSize(215,300);

        goFullScreenButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        goFullScreenButton.setText("Go Full Screen");
        goFullScreenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goFullScreenButtonActionPerformed(evt);
            }
        });

        exitFullScreenButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        exitFullScreenButton.setText("Exit Full Screen");

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton2.setText("Option3");
        jButton2.setPreferredSize(new java.awt.Dimension(153, 31));

        javax.swing.GroupLayout optionsDialogLayout = new javax.swing.GroupLayout(optionsDialog.getContentPane());
        optionsDialog.getContentPane().setLayout(optionsDialogLayout);
        optionsDialogLayout.setHorizontalGroup(
            optionsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, optionsDialogLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(optionsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(exitFullScreenButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(goFullScreenButton, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE))
                .addGap(25, 25, 25))
        );
        optionsDialogLayout.setVerticalGroup(
            optionsDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(optionsDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(goFullScreenButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(exitFullScreenButton, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(87, Short.MAX_VALUE))
        );

        paymentDialog.setTitle("Payment Option");
        paymentDialog.setLocation(450,300);
        paymentDialog.setModal(true);
        paymentDialog.setResizable(false);
        paymentDialog.setSize(405,200);

        paymentDialogLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        paymentDialogLabel.setText("Select payment method");

        cashButton.setBackground(new java.awt.Color(255, 153, 255));
        cashButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cashButton.setText("Cash");
        cashButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashButtonActionPerformed(evt);
            }
        });

        cardButton.setBackground(new java.awt.Color(255, 204, 153));
        cardButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cardButton.setText("Card");
        cardButton.setPreferredSize(new java.awt.Dimension(71, 31));
        cardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cardButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout paymentDialogLayout = new javax.swing.GroupLayout(paymentDialog.getContentPane());
        paymentDialog.getContentPane().setLayout(paymentDialogLayout);
        paymentDialogLayout.setHorizontalGroup(
            paymentDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paymentDialogLayout.createSequentialGroup()
                .addGap(110, 110, 110)
                .addComponent(paymentDialogLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(104, 104, 104))
            .addGroup(paymentDialogLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(cashButton, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cardButton, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );
        paymentDialogLayout.setVerticalGroup(
            paymentDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paymentDialogLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(paymentDialogLabel)
                .addGap(18, 18, 18)
                .addGroup(paymentDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cashButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cardButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tableSetupDialog.setTitle("Setup - Tables");
        tableSetupDialog.setLocation(450,300);
        tableSetupDialog.setModal(true);
        tableSetupDialog.setResizable(false);
        tableSetupDialog.setSize(455,160);

        tableSetupLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tableSetupLabel.setText("Enter the total number of tables in your restaurant");

        tableSetupTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        tableSetupButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tableSetupButton.setText("Done");
        tableSetupButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tableSetupButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tableSetupDialogLayout = new javax.swing.GroupLayout(tableSetupDialog.getContentPane());
        tableSetupDialog.getContentPane().setLayout(tableSetupDialogLayout);
        tableSetupDialogLayout.setHorizontalGroup(
            tableSetupDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tableSetupDialogLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(tableSetupLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(tableSetupDialogLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(tableSetupTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tableSetupButton, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
        );
        tableSetupDialogLayout.setVerticalGroup(
            tableSetupDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tableSetupDialogLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(tableSetupLabel)
                .addGap(18, 18, 18)
                .addGroup(tableSetupDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tableSetupButton, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tableSetupTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        activeOrderDialog.setTitle("List of Active Orders");
        activeOrderDialog.setLocation(new java.awt.Point(100, 100));
        activeOrderDialog.setModal(true);
        activeOrderDialog.setResizable(false);
        activeOrderDialog.setSize(835, 545);

        activeOrderCloseButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        activeOrderCloseButton.setText("Close");
        activeOrderCloseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                activeOrderCloseButtonActionPerformed(evt);
            }
        });

        activeOrderList.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        activeOrderList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane6.setViewportView(activeOrderList);

        javax.swing.GroupLayout activeOrderDialogLayout = new javax.swing.GroupLayout(activeOrderDialog.getContentPane());
        activeOrderDialog.getContentPane().setLayout(activeOrderDialogLayout);
        activeOrderDialogLayout.setHorizontalGroup(
            activeOrderDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(activeOrderDialogLayout.createSequentialGroup()
                .addGap(357, 357, 357)
                .addComponent(activeOrderCloseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(357, Short.MAX_VALUE))
            .addGroup(activeOrderDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6)
                .addContainerGap())
        );
        activeOrderDialogLayout.setVerticalGroup(
            activeOrderDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(activeOrderDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 455, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(activeOrderCloseButton, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                .addContainerGap())
        );

        orderHistoryDialog.setTitle("Order History");
        orderHistoryDialog.setLocation(new java.awt.Point(150, 100));
        orderHistoryDialog.setModal(true);
        orderHistoryDialog.setResizable(false);
        orderHistoryDialog.setSize(841, 570);

        orderHistoryList.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        orderHistoryList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane5.setViewportView(orderHistoryList);

        orderNoTextLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        orderNoTextLabel.setText("Enter the order number if you have it.  Alternatively, you can look at the list of order history from today");

        orderHistorySearchButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        orderHistorySearchButton.setText("Search");

        orderHistoryTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        javax.swing.GroupLayout orderHistoryDialogLayout = new javax.swing.GroupLayout(orderHistoryDialog.getContentPane());
        orderHistoryDialog.getContentPane().setLayout(orderHistoryDialogLayout);
        orderHistoryDialogLayout.setHorizontalGroup(
            orderHistoryDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(orderHistoryDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(orderHistoryDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5)
                    .addGroup(orderHistoryDialogLayout.createSequentialGroup()
                        .addComponent(orderNoTextLabel)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, orderHistoryDialogLayout.createSequentialGroup()
                .addGap(252, 252, 252)
                .addComponent(orderHistoryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(orderHistorySearchButton)
                .addGap(252, 252, 252))
        );
        orderHistoryDialogLayout.setVerticalGroup(
            orderHistoryDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, orderHistoryDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(orderNoTextLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(orderHistoryDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(orderHistorySearchButton)
                    .addComponent(orderHistoryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        setTableNoDialog.setTitle("Set Table Number");
        setTableNoDialog.setLocation(new java.awt.Point(450, 300));
        setTableNoDialog.setModal(true);
        setTableNoDialog.setResizable(false);
        setTableNoDialog.setSize(496,227);

        newOrderSummaryLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        newOrderSummaryLabel.setText("Set Table Number or press Take Away for take away orders.");

        setTableNumberLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        setTableNumberLabel.setText("Table Number:");

        newOrderTableNoTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        newOrderTableNoTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        newOrderDoneButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        newOrderDoneButton.setText("Done");
        newOrderDoneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newOrderDoneButtonActionPerformed(evt);
            }
        });

        takeAwayButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        takeAwayButton.setText("Take Away");
        takeAwayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                takeAwayButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout setTableNoDialogLayout = new javax.swing.GroupLayout(setTableNoDialog.getContentPane());
        setTableNoDialog.getContentPane().setLayout(setTableNoDialogLayout);
        setTableNoDialogLayout.setHorizontalGroup(
            setTableNoDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(setTableNoDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(newOrderSummaryLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, setTableNoDialogLayout.createSequentialGroup()
                .addGroup(setTableNoDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(setTableNoDialogLayout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(setTableNumberLabel))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, setTableNoDialogLayout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(takeAwayButton, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(setTableNoDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(newOrderDoneButton, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                    .addComponent(newOrderTableNoTextField))
                .addGap(90, 90, 90))
        );
        setTableNoDialogLayout.setVerticalGroup(
            setTableNoDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(setTableNoDialogLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(newOrderSummaryLabel)
                .addGap(18, 18, 18)
                .addGroup(setTableNoDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(setTableNumberLabel)
                    .addComponent(newOrderTableNoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(setTableNoDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(newOrderDoneButton, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                    .addComponent(takeAwayButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30))
        );

        addItemDialog.setTitle("Item Capture Dialog");
        addItemDialog.setLocation(450,100);
        addItemDialog.setModal(true);
        addItemDialog.setResizable(false);
        addItemDialog.setSize(469,485);

        addItmLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addItmLabel.setText("Please select a Category from the drop down list");

        itmNameLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        itmNameLabel.setText("Enter Item Name:");

        itmNameTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        itmInfoLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        itmInfoLabel.setText("Enter Item Info (allergy advice):");

        itmInfoTextArea.setColumns(20);
        itmInfoTextArea.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        itmInfoTextArea.setLineWrap(true);
        itmInfoTextArea.setRows(5);
        jScrollPane2.setViewportView(itmInfoTextArea);

        itmPriceLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        itmPriceLabel.setText("Enter Item Price:");

        itmPriceTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        addItmCancelBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addItmCancelBtn.setText("Cancel");
        addItmCancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addItmCancelBtnActionPerformed(evt);
            }
        });

        addItmDoneBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addItmDoneBtn.setText("DONE");
        addItmDoneBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addItmDoneBtnActionPerformed(evt);
            }
        });

        selectCatComboBox.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        selectCatComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectCatComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addItemDialogLayout = new javax.swing.GroupLayout(addItemDialog.getContentPane());
        addItemDialog.getContentPane().setLayout(addItemDialogLayout);
        addItemDialogLayout.setHorizontalGroup(
            addItemDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addItemDialogLayout.createSequentialGroup()
                .addGroup(addItemDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addItemDialogLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(addItemDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(itmInfoLabel)
                            .addGroup(addItemDialogLayout.createSequentialGroup()
                                .addGap(151, 151, 151)
                                .addComponent(addItmDoneBtn)
                                .addGap(24, 24, 24)
                                .addComponent(addItmCancelBtn))
                            .addGroup(addItemDialogLayout.createSequentialGroup()
                                .addComponent(itmPriceLabel)
                                .addGap(18, 18, 18)
                                .addComponent(itmPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addItemDialogLayout.createSequentialGroup()
                                .addComponent(itmNameLabel)
                                .addGap(18, 18, 18)
                                .addComponent(itmNameTextField))
                            .addComponent(jScrollPane2)
                            .addComponent(addItmLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(addItemDialogLayout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addComponent(selectCatComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(43, 43, 43))
        );
        addItemDialogLayout.setVerticalGroup(
            addItemDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addItemDialogLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(addItmLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(selectCatComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(addItemDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(itmNameLabel)
                    .addComponent(itmNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(itmInfoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addGroup(addItemDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(itmPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(itmPriceLabel))
                .addGap(21, 21, 21)
                .addGroup(addItemDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addItmCancelBtn)
                    .addComponent(addItmDoneBtn))
                .addGap(26, 26, 26))
        );

        editCategoryDialog.setTitle("Edit Category Dialog");
        editCategoryDialog.setLocation(400,300);
        editCategoryDialog.setModal(true);
        editCategoryDialog.setResizable(false);
        editCategoryDialog.setSize(490,290);

        editCatLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        editCatLabel.setText("Please enter the label of the Category you wish to rename:");

        editCatLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        editCatLabel2.setText("Please enter the new name of the Category:");

        newCatNameTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        editCatDoneButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        editCatDoneButton.setText("Done");
        editCatDoneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editCatDoneButtonActionPerformed(evt);
            }
        });

        editCatCancelButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        editCatCancelButton.setText("Cancel");
        editCatCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editCatCancelButtonActionPerformed(evt);
            }
        });

        editCatComboBox.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        editCatComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editCatComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout editCategoryDialogLayout = new javax.swing.GroupLayout(editCategoryDialog.getContentPane());
        editCategoryDialog.getContentPane().setLayout(editCategoryDialogLayout);
        editCategoryDialogLayout.setHorizontalGroup(
            editCategoryDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editCategoryDialogLayout.createSequentialGroup()
                .addGroup(editCategoryDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(editCategoryDialogLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(editCatLabel))
                    .addGroup(editCategoryDialogLayout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(editCatLabel2))
                    .addGroup(editCategoryDialogLayout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addGroup(editCategoryDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(newCatNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(editCategoryDialogLayout.createSequentialGroup()
                                .addComponent(editCatDoneButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(editCatCancelButton))))
                    .addGroup(editCategoryDialogLayout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addComponent(editCatComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        editCategoryDialogLayout.setVerticalGroup(
            editCategoryDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editCategoryDialogLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(editCatLabel)
                .addGap(18, 18, 18)
                .addComponent(editCatComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(editCatLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(newCatNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(editCategoryDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editCatDoneButton)
                    .addComponent(editCatCancelButton))
                .addGap(24, 24, 24))
        );

        removeCategoryDialog.setTitle("Remove Category Dialog");
        removeCategoryDialog.setLocation(450,200);
        removeCategoryDialog.setModal(true);
        removeCategoryDialog.setResizable(false);
        removeCategoryDialog.setSize(465,270);

        removeCatLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        removeCatLabel.setText("Please select a Category to remove from the menu");

        removeCatComboBox.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N

        removeCatCheckBox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        removeCatCheckBox.setText("Confirm to remove the Category from the menu");

        removeCatDoneButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        removeCatDoneButton.setText("Done");
        removeCatDoneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeCatDoneButtonActionPerformed(evt);
            }
        });

        removeCatCancelButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        removeCatCancelButton.setText("Cancel");
        removeCatCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeCatCancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout removeCategoryDialogLayout = new javax.swing.GroupLayout(removeCategoryDialog.getContentPane());
        removeCategoryDialog.getContentPane().setLayout(removeCategoryDialogLayout);
        removeCategoryDialogLayout.setHorizontalGroup(
            removeCategoryDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removeCategoryDialogLayout.createSequentialGroup()
                .addGroup(removeCategoryDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(removeCategoryDialogLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(removeCategoryDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(removeCatLabel)
                            .addGroup(removeCategoryDialogLayout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(removeCatCheckBox))))
                    .addGroup(removeCategoryDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, removeCategoryDialogLayout.createSequentialGroup()
                            .addGap(83, 83, 83)
                            .addComponent(removeCatDoneButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(removeCatCancelButton))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, removeCategoryDialogLayout.createSequentialGroup()
                            .addGap(80, 80, 80)
                            .addComponent(removeCatComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(27, 27, 27))
        );
        removeCategoryDialogLayout.setVerticalGroup(
            removeCategoryDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removeCategoryDialogLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(removeCatLabel)
                .addGap(18, 18, 18)
                .addComponent(removeCatComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(removeCatCheckBox)
                .addGap(18, 18, 18)
                .addGroup(removeCategoryDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeCatDoneButton)
                    .addComponent(removeCatCancelButton))
                .addGap(40, 40, 40))
        );

        editItemDialog.setTitle("Edit Item Dialog");
        editItemDialog.setLocation(450, 80);
        editItemDialog.setModal(true);
        editItemDialog.setResizable(false);
        editItemDialog.setSize(530,580);

        editItemLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        editItemLabel1.setText("Please select the Category of the Item you wish to change: ");

        editItemCatComboBox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        editItemLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        editItemLabel2.setText("Please select the Item you wish to change:");

        editItemItemsComboBox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        editItemCheckBox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        editItemCheckBox.setText("Please confirm the changes you wish to make.");

        editItemDoneButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        editItemDoneButton.setText("Done");
        editItemDoneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editItemDoneButtonActionPerformed(evt);
            }
        });

        editItemCancelButton3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        editItemCancelButton3.setText("Cancel");
        editItemCancelButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editItemCancelButton3ActionPerformed(evt);
            }
        });

        newItmNameTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        newItmNameLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        newItmNameLabel.setText("Please enter the new name of the item:");

        newItmInfoLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        newItmInfoLabel.setText("Please enter the updated info of the item:");

        newItmInfoTextArea.setColumns(20);
        newItmInfoTextArea.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        newItmInfoTextArea.setLineWrap(true);
        newItmInfoTextArea.setRows(5);
        newItmInfoTextArea.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jScrollPane3.setViewportView(newItmInfoTextArea);

        newItmPriceLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        newItmPriceLabel.setText("Please enter the new price of the item: ");

        newItmPriceTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        javax.swing.GroupLayout editItemDialogLayout = new javax.swing.GroupLayout(editItemDialog.getContentPane());
        editItemDialog.getContentPane().setLayout(editItemDialogLayout);
        editItemDialogLayout.setHorizontalGroup(
            editItemDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editItemDialogLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(editItemDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editItemDialogLayout.createSequentialGroup()
                        .addGroup(editItemDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(editItemDialogLayout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addComponent(editItemDoneButton)
                                .addGap(59, 59, 59)
                                .addComponent(editItemCancelButton3))
                            .addComponent(editItemCheckBox))
                        .addGap(136, 136, 136))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editItemDialogLayout.createSequentialGroup()
                        .addGroup(editItemDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(editItemDialogLayout.createSequentialGroup()
                                .addComponent(newItmPriceLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(newItmPriceTextField))
                            .addComponent(newItmInfoLabel)
                            .addComponent(editItemLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane3)
                            .addGroup(editItemDialogLayout.createSequentialGroup()
                                .addComponent(newItmNameLabel)
                                .addGap(18, 18, 18)
                                .addComponent(newItmNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(25, 25, 25))))
            .addGroup(editItemDialogLayout.createSequentialGroup()
                .addGroup(editItemDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(editItemDialogLayout.createSequentialGroup()
                        .addGap(136, 136, 136)
                        .addComponent(editItemItemsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(editItemDialogLayout.createSequentialGroup()
                        .addGap(136, 136, 136)
                        .addComponent(editItemCatComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(editItemDialogLayout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(editItemLabel2)))
                .addContainerGap())
        );
        editItemDialogLayout.setVerticalGroup(
            editItemDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editItemDialogLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(editItemLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editItemCatComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(editItemLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editItemItemsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(editItemDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newItmNameLabel)
                    .addComponent(newItmNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(newItmInfoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(editItemDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newItmPriceLabel)
                    .addComponent(newItmPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addComponent(editItemCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(editItemDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editItemDoneButton)
                    .addComponent(editItemCancelButton3))
                .addGap(32, 32, 32))
        );

        removeItemDialog.setTitle("Remove Item Dialog");
        removeItemDialog.setLocation(450,200);
        removeItemDialog.setModal(true);
        removeItemDialog.setResizable(false);
        removeItemDialog.setSize(515,350);

        removeItemLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        removeItemLabel1.setText("Please select the Category of the Item you wish to remove");

        removeItemCatComboBox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        removeItemLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        removeItemLabel2.setText("Please select the Item you wish to remove");

        removeItemItmComboBox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        removeItemCheckBox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        removeItemCheckBox.setText("Please Confirm to remove the Item");

        removeItemDoneButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        removeItemDoneButton.setText("Done");
        removeItemDoneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeItemDoneButtonActionPerformed(evt);
            }
        });

        removeItemCancelButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        removeItemCancelButton.setText("Cancel");
        removeItemCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeItemCancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout removeItemDialogLayout = new javax.swing.GroupLayout(removeItemDialog.getContentPane());
        removeItemDialog.getContentPane().setLayout(removeItemDialogLayout);
        removeItemDialogLayout.setHorizontalGroup(
            removeItemDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, removeItemDialogLayout.createSequentialGroup()
                .addGap(152, 152, 152)
                .addComponent(removeItemCatComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(152, 152, 152))
            .addGroup(removeItemDialogLayout.createSequentialGroup()
                .addGroup(removeItemDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(removeItemDialogLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(removeItemLabel1))
                    .addGroup(removeItemDialogLayout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(removeItemLabel2))
                    .addGroup(removeItemDialogLayout.createSequentialGroup()
                        .addGap(143, 143, 143)
                        .addGroup(removeItemDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(removeItemDialogLayout.createSequentialGroup()
                                .addComponent(removeItemDoneButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(removeItemCancelButton))
                            .addGroup(removeItemDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(removeItemCheckBox)
                                .addComponent(removeItemItmComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(25, 25, 25))
        );
        removeItemDialogLayout.setVerticalGroup(
            removeItemDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removeItemDialogLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(removeItemLabel1)
                .addGap(18, 18, 18)
                .addComponent(removeItemCatComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(removeItemLabel2)
                .addGap(18, 18, 18)
                .addComponent(removeItemItmComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(removeItemCheckBox)
                .addGap(18, 18, 18)
                .addGroup(removeItemDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(removeItemDoneButton)
                    .addComponent(removeItemCancelButton))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ResITS v0.1");
        setSize(1080, 800);

        categoryPanel.setBackground(new java.awt.Color(255, 204, 204));

        javax.swing.GroupLayout categoryPanelLayout = new javax.swing.GroupLayout(categoryPanel);
        categoryPanel.setLayout(categoryPanelLayout);
        categoryPanelLayout.setHorizontalGroup(
            categoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 199, Short.MAX_VALUE)
        );
        categoryPanelLayout.setVerticalGroup(
            categoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        displayPanel.setBackground(new java.awt.Color(204, 255, 255));

        menuDisplayList.setFont(new java.awt.Font("Monospaced", 0, 24)); // NOI18N
        jScrollPane4.setViewportView(menuDisplayList);

        orderDisplayList.setFont(new java.awt.Font("Monospaced", 0, 24)); // NOI18N
        jScrollPane1.setViewportView(orderDisplayList);

        totalDisplayTextField.setEditable(false);
        totalDisplayTextField.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        totalDisplayTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        totalLabel.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        totalLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        totalLabel.setText("TOTAL");

        orderNumberLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        orderNumberLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        orderNumberLabel.setText("Order Number:");

        tableNumberLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tableNumberLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tableNumberLabel.setText("Table Number:");

        orderNoDisplayTextField.setEditable(false);
        orderNoDisplayTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        orderNoDisplayTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        tableNoDisplayTextField.setEditable(false);
        tableNoDisplayTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tableNoDisplayTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tableNoDisplayTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tableNoDisplayTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout displayPanelLayout = new javax.swing.GroupLayout(displayPanel);
        displayPanel.setLayout(displayPanelLayout);
        displayPanelLayout.setHorizontalGroup(
            displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, displayPanelLayout.createSequentialGroup()
                        .addGroup(displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, displayPanelLayout.createSequentialGroup()
                                .addComponent(orderNumberLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(orderNoDisplayTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, displayPanelLayout.createSequentialGroup()
                                .addGroup(displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tableNumberLabel)
                                    .addComponent(totalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tableNoDisplayTextField)
                                    .addComponent(totalDisplayTextField))))
                        .addGap(33, 33, 33))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, displayPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        displayPanelLayout.setVerticalGroup(
            displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(displayPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane4)
                        .addContainerGap())
                    .addGroup(displayPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(orderNumberLabel)
                            .addComponent(orderNoDisplayTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tableNumberLabel)
                            .addComponent(tableNoDisplayTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(totalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(totalDisplayTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12))))
        );

        buttonsPanel.setBackground(new java.awt.Color(204, 204, 255));

        newOrderButton.setBackground(new java.awt.Color(0, 255, 255));
        newOrderButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        newOrderButton.setText("New Order");
        newOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newOrderButtonActionPerformed(evt);
            }
        });

        activeOrdersButton.setBackground(new java.awt.Color(51, 51, 255));
        activeOrdersButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        activeOrdersButton.setText("Active Orders");
        activeOrdersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                activeOrdersButtonActionPerformed(evt);
            }
        });

        sendToKitchenButton.setBackground(new java.awt.Color(255, 255, 0));
        sendToKitchenButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        sendToKitchenButton.setText("Send To Kitchen");
        sendToKitchenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendToKitchenButtonActionPerformed(evt);
            }
        });

        orderHistoryButton.setBackground(new java.awt.Color(153, 102, 255));
        orderHistoryButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        orderHistoryButton.setText("Order History");
        orderHistoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderHistoryButtonActionPerformed(evt);
            }
        });

        completeOrderButton.setBackground(new java.awt.Color(102, 255, 51));
        completeOrderButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        completeOrderButton.setText("Complete Order");
        completeOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                completeOrderButtonActionPerformed(evt);
            }
        });

        optionsButton.setText("OPTIONS");
        optionsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optionsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout buttonsPanelLayout = new javax.swing.GroupLayout(buttonsPanel);
        buttonsPanel.setLayout(buttonsPanelLayout);
        buttonsPanelLayout.setHorizontalGroup(
            buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(newOrderButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(activeOrdersButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sendToKitchenButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(orderHistoryButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(optionsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(completeOrderButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        buttonsPanelLayout.setVerticalGroup(
            buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(orderHistoryButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
                    .addComponent(sendToKitchenButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(newOrderButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(activeOrdersButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(completeOrderButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(optionsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        fileMenu.setText("File");
        fileMenu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        saveMenuItem.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        saveMenuItem.setText("Save");
        fileMenu.add(saveMenuItem);

        fullScreenMenuItem.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        fullScreenMenuItem.setText("Go Full Screen");
        fileMenu.add(fullScreenMenuItem);

        menuBar.add(fileMenu);

        settingsMenu.setText("Settings");
        settingsMenu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        categoryMenu.setText("Category");
        categoryMenu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        addCategoryMenuItem.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        addCategoryMenuItem.setText("Add Category");
        addCategoryMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCategoryMenuItemActionPerformed(evt);
            }
        });
        categoryMenu.add(addCategoryMenuItem);

        editCategoryMenuItem.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        editCategoryMenuItem.setText("Edit Category");
        editCategoryMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editCategoryMenuItemActionPerformed(evt);
            }
        });
        categoryMenu.add(editCategoryMenuItem);

        removeCategoryMenuItem.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        removeCategoryMenuItem.setText("Remove Category");
        removeCategoryMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeCategoryMenuItemActionPerformed(evt);
            }
        });
        categoryMenu.add(removeCategoryMenuItem);

        settingsMenu.add(categoryMenu);

        itemMenu.setText("Items");
        itemMenu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        addItemMenuItem.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        addItemMenuItem.setText("Add Item");
        addItemMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addItemMenuItemActionPerformed(evt);
            }
        });
        itemMenu.add(addItemMenuItem);

        editItemMenuItem.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        editItemMenuItem.setText("Edit Item");
        editItemMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editItemMenuItemActionPerformed(evt);
            }
        });
        itemMenu.add(editItemMenuItem);

        removeItemMenuItem.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        removeItemMenuItem.setText("Remove Item");
        removeItemMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeItemMenuItemActionPerformed(evt);
            }
        });
        itemMenu.add(removeItemMenuItem);

        settingsMenu.add(itemMenu);

        tablesMenu.setText("Tables");
        tablesMenu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        noOfTablesMenuItem.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        noOfTablesMenuItem.setText("Set No. of Tables");
        noOfTablesMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noOfTablesMenuItemActionPerformed(evt);
            }
        });
        tablesMenu.add(noOfTablesMenuItem);

        settingsMenu.add(tablesMenu);

        menuBar.add(settingsMenu);

        helpMenu.setText("Help");
        helpMenu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        userGuideMenuItem.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        userGuideMenuItem.setText("Users' Guide");
        helpMenu.add(userGuideMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(categoryPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(displayPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(displayPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(categoryPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                        

    /**
     * Provides the user with the UI to enter the category name.
     * @param evt 
     */
    private void addCategoryMenuItemActionPerformed(java.awt.event.ActionEvent evt) {                                                    
        catCapture.setVisible(true);
    }                                                   

    
    /**
     * Closes the UI that was provided to enter the category name.
     * @param evt 
     */
    private void catCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                
        // TODO add your handling code here:
        catCapture.setVisible(false);
    }                                               

    
    /*
     * The contents of the following TWO methods, namely "catCapBtnActionPerformed"
     * and "addCategoryBtn", were obtained from 
     * https://docs.oracle.com/javase/tutorial/uiswing/layout/box.html#eg on the  
     * 1st of March, 2017; and was permitted to use and modify under the following conditions.
     *
     *
     * Copyright (c) 1995, 2008, Oracle and/or its affiliates. All rights reserved.
     *
     * Redistribution and use in source and binary forms, with or without
     * modification, are permitted provided that the following conditions
     * are met:
     *
     *   - Redistributions of source code must retain the above copyright
     *     notice, this list of conditions and the following disclaimer.
     *
     *   - Redistributions in binary form must reproduce the above copyright
     *     notice, this list of conditions and the following disclaimer in the
     *     documentation and/or other materials provided with the distribution.
     *
     *   - Neither the name of Oracle or the names of its
     *     contributors may be used to endorse or promote products derived
     *     from this software without specific prior written permission.
     *
     * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
     * IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
     * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
     * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
     * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
     * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
     * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
     * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
     * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
     * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
     * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
     */ 

    /**
     * This method accepts the user input, and sends the input to the Control class.
     * It sets the layout for the panel and adds button to the panel; and finally, it 
     * removes the text from the text field before it closes the UI.  It throws an 
     * Illegal Argument Exception when the user input is an empty string.
     * @param evt 
     */
    private void catCapBtnActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
        if(!catCapTextField.getText().trim().isEmpty())
        {
            Control.addCategory(catCapTextField.getText().trim());    
                        
            categoryPanel.setLayout(new BoxLayout(categoryPanel, BoxLayout.Y_AXIS));

            addCategoryBtn(catCapTextField.getText());

            catCapTextField.setText("");
            catCapture.setVisible(false);
        }
        else
        {
            try
            {
                throw new IllegalArgumentException("Please enter the category name.");
            }
            catch(IllegalArgumentException iae)
            {
                System.out.println("Invalid Input.\n"+iae.getMessage());
            }
        }        
    }                                         

    
    /**
     * This method creates the JToggleButton object that is required to be displayed in the categoryPanel 
     * @param evt 
     */
    private void addCategoryBtn(String str)
    {
        CategoryBtn CB = new CategoryBtn(str);
        CB.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e)
            {
                
                displayMenu(str);
            }
        });
        
    
        CB.setAlignmentX(Component.CENTER_ALIGNMENT);
        CB.setPreferredSize(new Dimension(200, 70));
        CB.setMaximumSize(new Dimension( 200, 70));
        catBtnGroup.add(CB);
        categoryPanel.add(CB);
        categoryPanel.revalidate();
    }

    /**
     * This method displays the items within the selected Category.
     * @param str 
     */
    public void displayMenu(String str)
    {
        for( Category cat: Control.getCatList())
        {
            if(cat.getCatName().equals(str))
            {
                /*DefaultListModel<Item> listModel = new DefaultListModel<Item>();
                menuDisplayList.removeAll();
                for( Item itm: cat.getCatItems())
                {
                    listModel.addElement(itm);
                }
                menuDisplayList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
                menuDisplayList.setSelectedIndex(0);
                menuDisplayList.setModel(listModel);
                menuDisplayList.addListSelectionListener(new ListSelectionListener(){
                    public void valueChanged(ListSelectionEvent lse)
                    {
                        /*
                        DefaultListModel<Item> odrModel = new DefaultListModel<Item>();
                        odrModel.addElement((Item) menuDisplayList.getSelectedValue());
                        orderDisplayList.setModel(odrModel);    */
                       /* for(Order o: Control.getActiveOrderList())
                        {
                            if(Boolean.TRUE.equals(o.getOrderStatus()))
                            {
                                o.addItem((Item) menuDisplayList.getSelectedValue());
                                displayOrder(o);
                            }
                        }
                        
                    }
                });*/
                display(cat);
                /*JScrollPane listScrollPane = new JScrollPane(listModel);
                menuDisplayList.add(listScrollPane);*/
                break;
            }
            
        }
    }
    
    private void display(Category cat)
    {
        listModel = new DefaultListModel();
                for(Item itm: cat.getCatItems())
                {
                    listModel.addElement(itm);
                }
                
                //JList itmList = new JList(listModel);
                menuDisplayList.setModel(listModel);
                menuDisplayList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
                if(Boolean.TRUE.equals(Control.getIsActive()))
                {
                    menuDisplayList.addListSelectionListener(new ListSelectionListener(){
                        @Override
                        public void valueChanged(ListSelectionEvent evt)
                        {
                            
                            if(!evt.getValueIsAdjusting())                            
                            { 
                                    /*Item i = (Item)menuDisplayList.getSelectedValue();//Object i = menuDisplayList.getSelectedValue();
                                    
                                    //Control.currentOrderAddItem(cat.getCatItems().get(i));
                                    System.out.println("i: "+i.getItemName());
                                    //displayOrder(i);
                                    //Control.currentOrderAddItem(i);
                                    //Control.getOrderList(Control.getTableNo(), Control.getOrderNo());
                                    displayOrder();
                                    
                                    totalDisplayTextField.setText(Control.calculateTotal(Control.getTemporaryList()));*/
                                Item i = (Item)menuDisplayList.getSelectedValue();
                                
                                System.out.println("i: "+i.toString());
                                    
                            }
                            //System.out.println("getSource: "+evt.getSource());
                            menuDisplayList.clearSelection();
                        }
                    });
                }
    }
    
    
    private void clearDisplay()
    {
        listModel = new DefaultListModel();
        menuDisplayList.setModel(listModel);
    }
    private void displayOrder()
    {
        
        /*
        for(Category cat: Control.getCatList())
        {
            for(Item itm: cat.getCatItems())
            {
                if(itm.getItemName().equals(str))
                {
                    Order odr = new Order(Control.getOrderNo(), Control.getTableNo());
                    odr.addItem(itm.getItemName(), itm.getItemInfo(), itm.getItemPrice());
                    
                    
                }
            }
        }*/
        
        //Order odr = new Order(Control.getOrderNo(), Control.getTableNo());
        //odr.addItem(itm.getItemName(), itm.getItemInfo(), itm.getItemPrice());
        
        
        //List<Item> odrList = Control.getOrderList(Control.getTableNo(), Control.getOrderNo());
        odrModel = new DefaultListModel<Item>();
        for(Item i: Control.getTemporaryList())
        {
            odrModel.addElement(i);
            
        }
        
        //clearOrderDisplay();
        orderDisplayList.setModel(odrModel);
        //totalDisplayTextField.setText(Control.calculateTotal(Control.getTemporaryList()));
    }
    
    private void clearOrderDisplay()
    {
        odrModelDefault = new DefaultListModel<Item>();
        orderDisplayList.setModel(odrModelDefault);
    }
    /**
     * This method displays the options menu UI to the user.
     * @param evt 
     */
    private void optionsButtonActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:
        optionsDialog.setVisible(true);
    }                                             

    
    /**
     * This method displays the UI with payment option. 
     * @param evt 
     */
    private void completeOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                    
        // TODO add your handling code here:
        paymentDialog.setVisible(true);
    }                                                   

    
    /**
     * This method closes the displayed UI modal and unlocks the cash register.
     * @param evt 
     */
    private void cashButtonActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        paymentDialog.setVisible(false);
    }                                          

    
    /**
     * This method closes the displayed the UI modal and sends the total sum to the card payment machine.
     * @param evt 
     */
    private void cardButtonActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        paymentDialog.setVisible(false);
    }                                          

    
    /**
     * This method accepts the total number of tables available in the restaurant
     * and sends the input to Control class.
     * It throws the Number Format Exception when the input is an empty string.
     * @param evt 
     */
    private void tableSetupButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        // TODO add your handling code here:
        if(!tableSetupTextField.getText().trim().isEmpty())
        {
            Control.setNoOfTables(tableSetupTextField.getText().trim());
            
            tableSetupDialog.setVisible(false);
        }
        else
        {
            try
            {
                /*noOfTables = Integer.parseInt(tableSetupTextField.getText());
                Control.setNoOfTables(tableSetupTextField.getText());
                tableSetupDialog.setVisible(false);*/
            }
            catch(NumberFormatException ex)
            {
                System.out.println("Please re-enter the number of tables.");
            }
        }
    }                                                

    
    /**
     * This method provides the user with the UI to enter the total number of tables
     * available in the restaurant.
     * @param evt 
     */
    private void noOfTablesMenuItemActionPerformed(java.awt.event.ActionEvent evt) {                                                   
        // TODO add your handling code here:
        tableSetupDialog.setVisible(true);
    }                                                  

    
    /**
     * This method closes the Active Order UI.
     * @param evt 
     */
    private void activeOrderCloseButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                       
        // TODO add your handling code here:
        activeOrderDialog.setVisible(false);
    }                                                      
  

    /**
     * This method displays the Active Order UI to the user.
     * @param evt 
     */
    private void activeOrdersButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                   
        // TODO add your handling code here:
        DefaultListModel<Order> DLM = new DefaultListModel<Order>();
        activeOrderList.removeAll();
        for(Order o: Control.getActiveOrderList())
        {
            DLM.addElement(o);
        }
        activeOrderList.setModel(DLM);
        activeOrderDialog.setVisible(true);
    }                                                  

    
    /**
     * This method sets the order number for the take away order and displays "TA"
     * on the text field labeled "table number" before closing the UI.
     * @param evt 
     */
    private void takeAwayButtonActionPerformed(java.awt.event.ActionEvent evt) {                                               
        // TODO add your handling code here:
        //tableNo = "TA";
        Control.setTakeAway();
        tableNoDisplayTextField.setText(Control.getTableNo());
        Control.setOrderNo(Control.getTableNo());
        orderNoDisplayTextField.setText(Control.getOrderNo());
        
        Control.newOrderCurrentOrder();
        System.out.println("Active order List: "+Control.getActiveOrderList());
        setTableNoDialog.setVisible(false);
    }                                              

    
    /**
     * This method closes the dispalyed the UI that allowed the user to enter the table number.
     * It throws two types of exceptions, Illegal Argument Exceptions and Number Format Exception. 
     * @param evt 
     */
    private void newOrderDoneButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                   
        // TODO add your handling code here:
        String tableNo = newOrderTableNoTextField.getText().trim();
        try
        {
            if(Integer.parseInt(tableNo) <= Control.getNoOfTables() && Integer.parseInt(tableNo) > 0) 
            {
                Control.setTableNo(tableNo);
                
                tableNoDisplayTextField.setText(Control.getTableNo());
                Control.setOrderNo(Control.getTableNo());
                orderNoDisplayTextField.setText(Control.getOrderNo());
                
                Control.newOrderCurrentOrder();
                //Control.setCurrentOrder(Control.getOrderNo());
                System.out.println("Active order List: "+Control.getActiveOrderList());
                setTableNoDialog.setVisible(false);
            }
            else
            {
                try
                {
                    throw new IllegalArgumentException ("Invalid table number. Please re-enter the table number.");
                }
                catch(IllegalArgumentException iae)
                {
                    System.out.println("Caught an Illegal Argument Exception.\n"+iae.getMessage());
                }
            }        
        }
        catch(NumberFormatException ex)
        {
            if(tableNo.trim().isEmpty())
            {
                System.out.println("Please re-enter the table number.");
            }
        }   
    }                                                  
    
    
    
    
    /**
     * This method displays the UI that would allows the user to enter a table number.
     * @param evt 
     */
    private void newOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {                                               
        // TODO add your handling code here:
        if(Boolean.FALSE.equals(Control.getIsActive()))
        {
            Control.setActive();
            setTableNoDialog.setVisible(true);
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Please complete the current order.");
        }
    }                                              

    
    /**
     * This method displays the UI that would list all the completed orders of the day.
     * @param evt 
     */
    private void orderHistoryButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                   
        // TODO add your handling code here:
        orderHistoryDialog.setVisible(true);
    }                                                  
    
    /**
     * NOT REQUIRED
     * @param evt 
     */
    private void tableNoDisplayTextFieldActionPerformed(java.awt.event.ActionEvent evt) {                                                        
        // TODO add your handling code here:
        
        // * *THIS METHOD IS NOT REQUIRED* *
        
    }                                                       

    
    
    /**
     * This method will make the UI into full screen mode.
     * @param evt 
     */
    private void goFullScreenButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                   
        // TODO add your handling code here:
        this.setUndecorated(true);
        this.setVisible(true);
        this.setAlwaysOnTop(true);
        this.setResizable(false);
        //setFullScreenWindow(this);
        
        /*
        initComponents();
        
        Toolkit tk = Toolkit.getDefaultToolkit();
        
        int xSize = (int) tk.getScreenSize().getWidth();
        int ySize = (int) tk.getScreenSize().getHeight();
        
        this.setSize(xSize,ySize);*/
    }                                                  

    
    /**
     * This method displays the UI that allows the user to enter the details of Items.
     * @param evt 
     */
    private void addItemMenuItemActionPerformed(java.awt.event.ActionEvent evt) {                                                
        // TODO add your handling code here:
                
        List<Category> catList = Control.getCatList();
        
        selectCatComboBox.removeAllItems();
        for(Category cat: catList)
        {
            selectCatComboBox.addItem(cat);
        }
        addItemDialog.setVisible(true); 
    }                                               

    
    /**
     * This method closes the addItemDialog UI without accepting the user input.
     * @param evt 
     */
    private void addItmCancelBtnActionPerformed(java.awt.event.ActionEvent evt) {                                                
        // TODO add your handling code here:
        
        addItemDialog.setVisible(false);
    }                                               

    
    /**
     * This method accepts the user input and closes the addItemDialog UI.
     * @param evt 
     */
    private void addItmDoneBtnActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:
        
        if(!itmNameTextField.getText().isEmpty() && !itmPriceTextField.getText().isEmpty())
        {
            Control.addItem(selectCatComboBox.getSelectedItem().toString(), itmNameTextField.getText(), itmInfoTextArea.getText(), itmPriceTextField.getText());
            
            itmNameTextField.setText("");
            itmInfoTextArea.setText("");
            itmPriceTextField.setText("");
            
            addItemDialog.setVisible(false);
        }
        else
        {
            JOptionPane.showMessageDialog(null, "One or more of the item information is missing.\nPlease try again.");
        }
        
    }                                             

    private void selectCatComboBoxActionPerformed(java.awt.event.ActionEvent evt) {                                                  
        // TODO add your handling code here:
        
        // NOTHING TO DO HERE
    }                                                 

    private void editCategoryMenuItemActionPerformed(java.awt.event.ActionEvent evt) {                                                     
        // TODO add your handling code here:
        List<Category> catList = Control.getCatList();
        editCatComboBox.removeAllItems();
        for(Category cat: catList)
        {
            editCatComboBox.addItem(cat);
        }
        editCategoryDialog.setVisible(true);
    }                                                    

    private void editCatCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                    
        // TODO add your handling code here:
        editCategoryDialog.setVisible(false);
    }                                                   

    private void editCatDoneButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                  
        // TODO add your handling code here:
        Control.editCategory(editCatComboBox.getSelectedItem().toString(), newCatNameTextField.getText().trim());
        
        categoryPanel.removeAll();
        categoryPanel.setLayout(new BoxLayout(categoryPanel, BoxLayout.Y_AXIS));
        for(Category cat: Control.getCatList())
            addCategoryBtn(cat.getCatName());
        
        editCategoryDialog.setVisible(false);
    }                                                 

    private void removeCategoryMenuItemActionPerformed(java.awt.event.ActionEvent evt) {                                                       
        // TODO add your handling code here:
        List<Category> catList = Control.getCatList();
        removeCatComboBox.removeAllItems();
        for(Category cat: catList)
        {
            removeCatComboBox.addItem(cat);
        }
        
        
        removeCategoryDialog.setVisible(true);
    }                                                      

    private void removeCatDoneButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                    
        // TODO add your handling code here:
        
        
        if (removeCatCheckBox.isSelected())
        {
            Control.removeCategory(removeCatComboBox.getSelectedItem().toString());
            System.out.println("categoryList: "+Control.getCatList());
            
            categoryPanel.removeAll();
            //categoryPanel.setLayout(new BoxLayout(categoryPanel, BoxLayout.Y_AXIS));
            for(Category cat: Control.getCatList())
            {
                addCategoryBtn(cat.getCatName());
                categoryPanel.repaint();
            }
        }
        else
        {
            System.out.println("No Operation performed");
        }
        
        removeCatCheckBox.setSelected(false);
        
        removeCategoryDialog.setVisible(false);
    }                                                   

    private void removeCatCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                      
        // TODO add your handling code here:
        removeCategoryDialog.setVisible(false);
    }                                                     

    private void editItemMenuItemActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        // TODO add your handling code here:
        List<Category> catList = Control.getCatList();
        editItemCatComboBox.removeAllItems();
        for(Category cat: catList)
        {
            editItemCatComboBox.addItem(cat);
            
        }
        /*String selectedCat = editItemCatComboBox.getSelectedItem().toString();
        //editItemDialog.validate();
        for (Category cat: catList)
        {
            if(selectedCat.equals(cat.getCatName()))
            {
                List<Item> itemList = cat.getCatItems();
                editItemItemsComboBox.removeAllItems();
                for(Item itm: itemList)
                {
                    
                    editItemItemsComboBox.addItem(itm);
                }
            }
        }*/
        editItemCatComboBox.addActionListener( new ActionListener(){
                public void actionPerformed(ActionEvent e)
                {
                   editItemItemsComboBox.removeAllItems();
                   Category sel = (Category) editItemCatComboBox.getSelectedItem();
                   //String cName = sel.getCatName();
                   try
                   {
                       for (Item i: sel.getCatItems())
                       {
                            editItemItemsComboBox.addItem(i);
                        
                       }
                   }
                   catch(NullPointerException npe)
                    {
                        System.out.println("Null Pointer Exception caught!\nLocalised Message: "+npe.getLocalizedMessage()+"\nDetailed Message: "+npe.getMessage());
                    }
                }
            });
        
        
        editItemDialog.setVisible(true);
    }                                                

    private void editItemDoneButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                   
        // TODO add your handling code here:
        //check the category selection
        //check the item selection
        //check the check-box
        //make the change
        if(editItemCheckBox.isSelected())
        {
            //edits the item
            Control.editItem(editItemCatComboBox.getSelectedItem().toString(), editItemItemsComboBox.getSelectedItem().toString(), newItmNameTextField.getText(), newItmInfoTextArea.getText(), newItmPriceTextField.getText());
            
            //removes the elements from the display
           clearDisplay();
            
            //clears the button selection
            catBtnGroup.clearSelection();
            
            //resets the window for future use
            
            newItmNameTextField.setText("");
            newItmInfoTextArea.setText("");
            newItmPriceTextField.setText("");
            
            editItemCatComboBox.removeAllItems();
            editItemItemsComboBox.removeAllItems();
            editItemCheckBox.setSelected(false);
        }
        editItemDialog.setVisible(false);
    }                                                  

    private void editItemCancelButton3ActionPerformed(java.awt.event.ActionEvent evt) {                                                      
        // TODO add your handling code here:
        newItmNameTextField.setText("");
        newItmInfoTextArea.setText("");
        newItmPriceTextField.setText("");
        editItemCheckBox.setSelected(false);
        editItemCatComboBox.removeAllItems();
        editItemItemsComboBox.removeAllItems();
        editItemDialog.setVisible(false);
    }                                                     

    private void removeItemMenuItemActionPerformed(java.awt.event.ActionEvent evt) {                                                   
        // TODO add your handling code here:
        List<Category> cList = Control.getCatList();
        removeItemCatComboBox.removeAllItems();
        for (Category cat: cList)
        {
            removeItemCatComboBox.addItem(cat);
        }
        removeItemCatComboBox.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent e)
            {
                Category sel = (Category) removeItemCatComboBox.getSelectedItem();
                removeItemItmComboBox.removeAllItems();
                try
                {
                    for(Item i : sel.getCatItems())
                    {
                        removeItemItmComboBox.addItem(i);
                    }
                }
                catch (NullPointerException npe)
                {
                    System.out.println("Null Pointer Exception caught!\nLocalised Message: "+npe.getLocalizedMessage()+"\nDetailed Message: "+npe.getMessage());
                }
            }
        });
        removeItemDialog.setVisible(true);
    }                                                  

    private void removeItemDoneButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                     
        // TODO add your handling code here:
        //check the Category
        //check the item
        //check the check-box 
        //make the change
        if(removeItemCheckBox.isSelected())
        {
            Control.removeItem(removeItemCatComboBox.getSelectedItem().toString(), removeItemItmComboBox.getSelectedItem().toString());
            
            clearDisplay();
            
            catBtnGroup.clearSelection();
            
            removeItemCatComboBox.removeAllItems();
            removeItemItmComboBox.removeAllItems();
            
            removeItemCheckBox.setSelected(false);
        }
        removeItemDialog.setVisible(false);
    }                                                    

    private void removeItemCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                       
        // TODO add your handling code here:
        removeItemCatComboBox.removeAllItems();
        removeItemItmComboBox.removeAllItems();

        removeItemCheckBox.setSelected(false);
        
        removeItemDialog.setVisible(false);
    }                                                      

    private void editCatComboBoxActionPerformed(java.awt.event.ActionEvent evt) {                                                
        // TODO add your handling code here:
    }                                               

    private void sendToKitchenButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                    
        // TODO add your handling code here:
        Control.migrateOrder(Control.getOrderNo(), Control.getTableNo());
        
        clearDisplay();
        catBtnGroup.clearSelection();
        clearOrderDisplay();
        orderNoDisplayTextField.setText("");
        tableNoDisplayTextField.setText("");
        totalDisplayTextField.setText("");
        
    }                                                   
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton activeOrderCloseButton;
    private javax.swing.JDialog activeOrderDialog;
    private javax.swing.JList activeOrderList;
    private javax.swing.JButton activeOrdersButton;
    private javax.swing.JMenuItem addCategoryMenuItem;
    private javax.swing.JDialog addItemDialog;
    private javax.swing.JMenuItem addItemMenuItem;
    private javax.swing.JButton addItmCancelBtn;
    private javax.swing.JButton addItmDoneBtn;
    private javax.swing.JLabel addItmLabel;
    private javax.swing.JPanel buttonsPanel;
    private javax.swing.JButton cardButton;
    private javax.swing.JButton cashButton;
    private javax.swing.ButtonGroup catBtnGroup;
    private javax.swing.JButton catCancelButton;
    private javax.swing.JButton catCapBtn;
    private javax.swing.JLabel catCapLabel;
    private javax.swing.JTextField catCapTextField;
    private javax.swing.JDialog catCapture;
    private javax.swing.JMenu categoryMenu;
    private javax.swing.JPanel categoryPanel;
    private javax.swing.JButton completeOrderButton;
    private javax.swing.JPanel displayPanel;
    private javax.swing.JButton editCatCancelButton;
    private javax.swing.JComboBox editCatComboBox;
    private javax.swing.JButton editCatDoneButton;
    private javax.swing.JLabel editCatLabel;
    private javax.swing.JLabel editCatLabel2;
    private javax.swing.JDialog editCategoryDialog;
    private javax.swing.JMenuItem editCategoryMenuItem;
    private javax.swing.JButton editItemCancelButton3;
    private javax.swing.JComboBox editItemCatComboBox;
    private javax.swing.JCheckBox editItemCheckBox;
    private javax.swing.JDialog editItemDialog;
    private javax.swing.JButton editItemDoneButton;
    private javax.swing.JComboBox editItemItemsComboBox;
    private javax.swing.JLabel editItemLabel1;
    private javax.swing.JLabel editItemLabel2;
    private javax.swing.JMenuItem editItemMenuItem;
    private javax.swing.JButton exitFullScreenButton;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenuItem fullScreenMenuItem;
    private javax.swing.JButton goFullScreenButton;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JMenu itemMenu;
    private javax.swing.JLabel itmInfoLabel;
    private javax.swing.JTextArea itmInfoTextArea;
    private javax.swing.JLabel itmNameLabel;
    private javax.swing.JTextField itmNameTextField;
    private javax.swing.JLabel itmPriceLabel;
    private javax.swing.JTextField itmPriceTextField;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JList menuDisplayList;
    private javax.swing.JTextField newCatNameTextField;
    private javax.swing.JLabel newItmInfoLabel;
    private javax.swing.JTextArea newItmInfoTextArea;
    private javax.swing.JLabel newItmNameLabel;
    private javax.swing.JTextField newItmNameTextField;
    private javax.swing.JLabel newItmPriceLabel;
    private javax.swing.JTextField newItmPriceTextField;
    private javax.swing.JButton newOrderButton;
    private javax.swing.JButton newOrderDoneButton;
    private javax.swing.JLabel newOrderSummaryLabel;
    private javax.swing.JTextField newOrderTableNoTextField;
    private javax.swing.JMenuItem noOfTablesMenuItem;
    private javax.swing.JButton optionsButton;
    private javax.swing.JDialog optionsDialog;
    private javax.swing.JList orderDisplayList;
    private javax.swing.JButton orderHistoryButton;
    private javax.swing.JDialog orderHistoryDialog;
    private javax.swing.JList orderHistoryList;
    private javax.swing.JButton orderHistorySearchButton;
    private javax.swing.JTextField orderHistoryTextField;
    private javax.swing.JTextField orderNoDisplayTextField;
    private javax.swing.JLabel orderNoTextLabel;
    private javax.swing.JLabel orderNumberLabel;
    private javax.swing.JDialog paymentDialog;
    private javax.swing.JLabel paymentDialogLabel;
    private javax.swing.JButton removeCatCancelButton;
    private javax.swing.JCheckBox removeCatCheckBox;
    private javax.swing.JComboBox removeCatComboBox;
    private javax.swing.JButton removeCatDoneButton;
    private javax.swing.JLabel removeCatLabel;
    private javax.swing.JDialog removeCategoryDialog;
    private javax.swing.JMenuItem removeCategoryMenuItem;
    private javax.swing.JButton removeItemCancelButton;
    private javax.swing.JComboBox removeItemCatComboBox;
    private javax.swing.JCheckBox removeItemCheckBox;
    private javax.swing.JDialog removeItemDialog;
    private javax.swing.JButton removeItemDoneButton;
    private javax.swing.JComboBox removeItemItmComboBox;
    private javax.swing.JLabel removeItemLabel1;
    private javax.swing.JLabel removeItemLabel2;
    private javax.swing.JMenuItem removeItemMenuItem;
    private javax.swing.JMenuItem saveMenuItem;
    private javax.swing.JComboBox selectCatComboBox;
    private javax.swing.JButton sendToKitchenButton;
    private javax.swing.JDialog setTableNoDialog;
    private javax.swing.JLabel setTableNumberLabel;
    private javax.swing.JMenu settingsMenu;
    private javax.swing.JTextField tableNoDisplayTextField;
    private javax.swing.JLabel tableNumberLabel;
    private javax.swing.JButton tableSetupButton;
    private javax.swing.JDialog tableSetupDialog;
    private javax.swing.JLabel tableSetupLabel;
    private javax.swing.JTextField tableSetupTextField;
    private javax.swing.JMenu tablesMenu;
    private javax.swing.JButton takeAwayButton;
    private javax.swing.JTextField totalDisplayTextField;
    private javax.swing.JLabel totalLabel;
    private javax.swing.JMenuItem userGuideMenuItem;
    // End of variables declaration                   
    
    //private static int noOfTables;
    ///private static String tableNo;
    private static String orderNo;
    private DefaultListModel listModel;
    private DefaultListModel odrModel;
    /*class CategoryListCellRenderer extends DefaultListCellRenderer
    {
        @Override
        public Component getListCellRendererComponent(JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus)
        {
            if(value instanceof Category)
            {
                value =((Category)value).getCatName();
            }
            return super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus); //To change body of generated methods, choose Tools | Templates.

        }
        
    }*/
}
